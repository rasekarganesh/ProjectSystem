@page "/login"
@using TabBlazor
@using Projektsystem.BlazorApp.Data;
@inject IJSRuntime JSRuntime
@inject SocialAuthenticationProvider SocialAuthenticationProvider
@inject NavigationManager NavigationManager

@attribute [AllowAnonymous]

<div class="page-body page-center">
    <div class="container container-tight py-4">
        <div class="card card-md">
            <div class="card-body">
                <h2 class="h2 text-center mb-4">Login to your account</h2>
                <!--<div class="form-footer">-->
                @*<button type="submit" class="btn btn-primary w-100">Sign in</button>*@
                <!--<Button class="btn btn-primary w-100" @onclick='LoginUserAsync' BackgroundColor="@TablerColor.Dark">Login</Button>
                </div>-->

            </div>

            <div class="card-body">
                <div class="row">
                    <div class="col-6-lg">
                        <Button class="btn btn-info w-100" @onclick="SignInWithGoogleAsync" BackgroundColor="@TablerColor.Success">Login using Google &nbsp; <Icon IconType="@TablerIcons.Brand_google" /></Button>

                    </div>
                    
                    <div class="col-6-lg mt-1">
                        <Button class="btn btn-info w-100"  @onclick="SignInWithMicrosoftAsync" BackgroundColor="@TablerColor.Success">Login using Microsoft &nbsp; <Icon IconType="@TablerIcons.Brand_windows" /></Button>
                     
                    </div>

                    @*<fb:login-button scope="public_profile,email" onlogin="checkLoginState();">
                        </fb:login-button>

                        <div id="status">
                        </div>*@
                    <!--<div class="col">
                    <a href="#" class="btn w-100">-->
                    <!-- Download SVG icon from http://tabler-icons.io/i/brand-twitter -->
                    <!--<svg xmlns="http://www.w3.org/2000/svg" class="icon text-twitter" width="24" height="24" viewBox="0 0 24 24" stroke-width="2" stroke="currentColor" fill="none" stroke-linecap="round" stroke-linejoin="round"><path stroke="none" d="M0 0h24v24H0z" fill="none" /><path d="M22 4.01c-1 .49 -1.98 .689 -3 .99c-1.121 -1.265 -2.783 -1.335 -4.38 -.737s-2.643 2.06 -2.62 3.737v1c-3.245 .083 -6.135 -1.395 -8 -4c0 0 -4.182 7.433 4 11c-1.872 1.247 -3.739 2.088 -6 2c3.308 1.803 6.913 2.423 10.034 1.517c3.58 -1.04 6.522 -3.723 7.651 -7.742a13.84 13.84 0 0 0 .497 -3.753c0 -.249 1.51 -2.772 1.818 -4.013z" /></svg>
                            Login with Twitter
                        </a>
                    </div>-->
                </div>
                <div class="row mt-2">
                    <div class="col">
                        <Button class="btn btn-primary w-100" @onclick='LoginUserAsync' BackgroundColor="@TablerColor.Dark">Login Super User</Button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {

    @inject SocialAuthenticationProvider AuthenticationStateProvider;

    @using Microsoft.AspNetCore.Authentication;

    protected override void OnAfterRender(bool firstRender)
    {
        if (!string.IsNullOrEmpty(AuthenticationStateProvider.CurrentUser.Email))
        {
            NavigationManager.NavigateTo("", false);
        }
        // base.OnAfterRender(firstRender);
    }



    public async Task LoginUserAsync()
    {
        await SocialAuthenticationProvider.LoginAsync("superuser@gmail.com");
        NavigationManager.NavigateTo("", false);

    }

    public async Task SignInWithGoogleAsync()
    {
        var AuthenticationStateProvider = DotNetObjectReference.Create<SocialAuthenticationProvider>(SocialAuthenticationProvider);
        await JSRuntime.InvokeVoidAsync("ProjectGoogleInitialize", "738471983974-lj4mabqi4m38sj80ch707bls18gk79r8.apps.googleusercontent.com", AuthenticationStateProvider);
        await JSRuntime.InvokeVoidAsync("ProjectGooglePrompt");
       
    }

    public async Task SignInWithMicrosoftAsync()
    {
        var AuthenticationStateProvider = DotNetObjectReference.Create<SocialAuthenticationProvider>(SocialAuthenticationProvider);
        await JSRuntime.InvokeVoidAsync("MicrosoftLoginInitialise", AuthenticationStateProvider);

    }
}

